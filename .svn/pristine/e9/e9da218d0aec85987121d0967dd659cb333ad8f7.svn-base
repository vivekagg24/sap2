<!-- saved from url=(0014)about:internet -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<title>NoteIcon.mxml</title>
<link rel="stylesheet" type="text/css" href="../../../SourceStyles.css"/>
</head>

<body><pre><span class="mxmlCdata">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
<span class="mxmlComponent">&lt;mx:Canvas</span> xmlns:mx=&quot;<span class="mxmlString">http://www.adobe.com/2006/mxml</span>&quot; width=&quot;<span class="mxmlString">50 </span>&quot; height=&quot;<span class="mxmlString">42</span>&quot;<span class="mxmlComponent">&gt;</span>
    <span class="mxmlTag">&lt;mx:Script</span> <span class="mxmlTag">&gt;</span>
        <span class="asOperator">&lt;!</span><span class="asBracket">[</span>CDATA<span class="asBracket">[</span>
             <span class="asReserved">import</span> mx.controls.listClasses.BaseListData;
             <span class="asReserved">import</span> com.adobe.viewsource.ViewSource;
            <span class="asReserved">import</span> mx.managers.PopUpManager;
            <span class="asReserved">import</span> mx.collections.ArrayCollection;
        
         

             <span class="asReserved">override</span> <span class="asReserved">public</span> <span class="asFunction">function</span> <span class="asReserved">set</span> data<span class="asBracket">(</span>value<span class="asOperator">:</span>Object<span class="asBracket">)</span><span class="asOperator">:</span><span class="asReserved">void</span>
             <span class="asBracket">{</span>
                 <span class="asReserved">super</span>.data <span class="asOperator">=</span> value;
                 notesIcon.data <span class="asOperator">=</span> value;
                 notesIcon.enabled <span class="asOperator">=</span> <span class="asReserved">false</span>;
            
                <span class="asReserved">if</span> <span class="asBracket">(</span>value <span class="asOperator">&amp;&amp;</span> value.NOTES <span class="asOperator">==</span> <span class="asString">&quot;X&quot;</span><span class="asBracket">){</span>
                    notesIcon.enabled <span class="asOperator">=</span> <span class="asReserved">true</span>;
                    notesIcon.visible <span class="asOperator">=</span> <span class="asReserved">true</span>;
                    notesIcon.toolTip <span class="asOperator">=</span> <span class="asString">&quot;Additional information available&quot;</span>;
                <span class="asBracket">}</span>
                <span class="asReserved">else</span> <span class="asBracket">{</span>
                     notesIcon.enabled <span class="asOperator">=</span> <span class="asReserved">false</span>;
                    notesIcon.visible <span class="asOperator">=</span> <span class="asReserved">false</span>;
                <span class="asBracket">}</span>

                 <span class="asReserved">super</span>.data <span class="asOperator">=</span> value;
                 attachIcon.data <span class="asOperator">=</span> value;
                 attachIcon.enabled <span class="asOperator">=</span> <span class="asReserved">false</span>;
            
                <span class="asReserved">if</span> <span class="asBracket">(</span>value <span class="asOperator">&amp;&amp;</span> value.ATTACHMENT <span class="asOperator">==</span> <span class="asString">&quot;X&quot;</span><span class="asBracket">){</span>
                    attachIcon.enabled <span class="asOperator">=</span> <span class="asReserved">true</span>;
                    attachIcon.visible <span class="asOperator">=</span> <span class="asReserved">true</span>;
                    attachIcon.toolTip <span class="asOperator">=</span> <span class="asString">&quot;Attachment available - open form to view&quot;</span>;
                <span class="asBracket">}</span>
                <span class="asReserved">else</span> <span class="asBracket">{</span>
                     attachIcon.enabled <span class="asOperator">=</span> <span class="asReserved">false</span>;
                    attachIcon.visible <span class="asOperator">=</span> <span class="asReserved">false</span>;
                <span class="asBracket">}</span>
                                
             <span class="asBracket">}</span>
             
             <span class="asReserved">public</span> <span class="asFunction">function</span> <span class="asReserved">set</span> listData<span class="asBracket">(</span>value<span class="asOperator">:</span>BaseListData<span class="asBracket">)</span><span class="asOperator">:</span><span class="asReserved">void</span>
             <span class="asBracket">{</span>
                 notesIcon.listData <span class="asOperator">=</span> value;
             <span class="asBracket">}</span>
             
             <span class="asReserved">public</span> <span class="asFunction">function</span> <span class="asReserved">get</span> listData<span class="asBracket">()</span><span class="asOperator">:</span>BaseListData
             <span class="asBracket">{</span>
                 <span class="asReserved">return</span> notesIcon.listData;
             <span class="asBracket">}</span>        
             
                     
        <span class="asBracket">]]</span><span class="asOperator">&gt;</span>
    <span class="mxmlTag">&lt;/mx:Script&gt;</span>
        
    <span class="mxmlComponent">&lt;mx:HBox</span> horizontalGap=&quot;<span class="mxmlString">0</span>&quot;<span class="mxmlComponent">&gt;</span>

    <span class="mxmlComponent">&lt;/mx:HBox&gt;</span>     
    <span class="mxmlTag">&lt;mx:Metadata&gt;</span>
       <span class="mxmlCdata">&lt;!-- [Event(name=&quot;displayNotes&quot;, type=&quot;mx.events.DynamicEvent&quot;)] --&gt;</span>
    <span class="mxmlTag">&lt;/mx:Metadata&gt;</span>
    <span class="mxmlComponent">&lt;mx:Image</span> id=&quot;<span class="mxmlString">attachIcon</span>&quot; source=&quot;<span class="mxmlString">HR/images/S_ATTACH.gif</span>&quot;
         resize=&quot;<span class="asReserved">false</span>&quot; width=&quot;<span class="mxmlString">15</span>&quot; maxWidth=&quot;<span class="mxmlString">15</span>&quot; x=&quot;<span class="mxmlString">25</span>&quot;<span class="mxmlComponent">&gt;</span>
    <span class="mxmlComponent">&lt;/mx:Image&gt;</span>
    <span class="mxmlComponent">&lt;mx:Image</span> id=&quot;<span class="mxmlString">notesIcon</span>&quot; source=&quot;<span class="mxmlString">@Embed(&apos;../../HR/images/Notes.gif&apos;)</span>&quot;
         click=&quot;onClick<span class="asBracket">()</span>&quot; resize=&quot;<span class="asReserved">false</span>&quot; useHandCursor=&quot;<span class="mxmlString">true</span>&quot; buttonMode=&quot;<span class="mxmlString">true</span>&quot; mouseChildren=&quot;<span class="mxmlString">false</span>&quot;  x=&quot;<span class="mxmlString">9</span>&quot;<span class="mxmlComponent">&gt;</span> 
        <span class="mxmlTag">&lt;mx:Script&gt;</span>
            <span class="asOperator">&lt;!</span><span class="asBracket">[</span>CDATA<span class="asBracket">[</span>
            <span class="asReserved">import</span> mx.events.DynamicEvent;
            <span class="asReserved">import</span> mx.controls.Alert;
               <span class="asReserved">import</span> mx.managers.PopUpManager;  
               <span class="asComment">//import mx.controls.listClasses.BaseListData;               
</span>            
            <span class="asReserved">private</span> <span class="asFunction">function</span> onClick<span class="asBracket">()</span><span class="asOperator">:</span><span class="asReserved">void</span>
            <span class="asBracket">{</span>                 
                <span class="asVar">var</span> message<span class="asOperator">:</span>Notes <span class="asOperator">=</span> PopUpManager.createPopUp<span class="asBracket">(</span><span class="asReserved">this</span>, Notes<span class="asBracket">)</span> <span class="asReserved">as</span> Notes;
                    message.data <span class="asOperator">=</span> <span class="asReserved">this</span>.data;
            <span class="asBracket">}</span>        
 <span class="asComment">/*                  var messagePopup:History =  PopUpManager.createPopUp(this, History) as History;
                  messagePopup.historyTab = parentApplication.getHistory(this.data.PARENT_WIID); 
                import flash.net.*; */</span>

<span class="asComment">/*                var adobeFormURL:String = this.parentApplication.portalURL + 
                                            &quot;/irj/servlet/prt/portal/prteventname/Navigate/prtroot/pcd!3aportal_content&quot; +
                                            &quot;!2fcom.morse.portalconfig!2fuk.co.newsint.NI_Desktop!2fframeworkPages!2fuk.co.newsint.portal.frameworkpage!2fcom.sap.portal.innerpage!2fcom.sap.portal.contentarea?&quot; +
                                            &quot;NavigationTarget=ROLES%3A%2F&quot; +
                                            &quot;%2Fportal_content&quot; +
                                            &quot;%2Fcom.sap.pct%2Fspecialist&quot; +
                                            &quot;%2Fcom.sap.pct.erp.hradmin.bp_folder&quot; +
                                            &quot;%2Fcom.sap.pct.erp.hradmin.11.bp_folder&quot; +
                                            &quot;%2Fcom.sap.pct.erp.hradmin.11.roles&quot; +
                                            &quot;%2Fcom.sap.pct.erp.hradmin.11.HRAdministrator&quot; +
                                            &quot;%2Foverview%2Fcom.sap.pct.erp.hradmin.11.overview&quot; +
                                            &quot;%2Fcom.sap.pct.erp.hradmin.11.start_processes&quot; +
                                            &quot;&amp;DynamicParameter=WI_ID%3D&quot; + this.data.WIID +
                                            &quot;&amp;CurrentWindowId=WID1278491345079&quot; +
                                            &quot;&amp;NavMode=1&quot;;
                var formURL:URLRequest = new URLRequest(adobeFormURL);
                navigateToURL(formURL,&quot;_blank&quot;);   */</span>
                    
            <span class="asBracket">]]</span><span class="asOperator">&gt;</span>
        <span class="mxmlTag">&lt;/mx:Script&gt;</span> 
    <span class="mxmlComponent">&lt;/mx:Image&gt;</span>
<span class="mxmlComponent">&lt;/mx:Canvas&gt;</span></pre></body>
</html>
