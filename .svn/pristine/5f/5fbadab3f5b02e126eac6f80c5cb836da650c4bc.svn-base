<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:local="*"
	             initialize="createDataProvider()"
	>
	<local:FastShiftGrid id="grid" labelField="val" dataProvider="{dp}" height="300"
		                 width="800">
		
	</local:FastShiftGrid>
	
	<mx:XMLListCollection id="dp" />
	
	<mx:Script>
		<![CDATA[
		
		import mx.collections.XMLListCollection;
					
		/** Create the grid data
		 * 
		 */
		protected function createDataProvider():void
		{
				
			var num_rows:uint = 8; // 8 Shift Patterns
			var num_cols:uint = 2000;
			
/* 			// Row headers
			var colH:XMLListCollection = new XMLListCollection();
			colH.disableAutoUpdate();
				var head:XML = new XML('<header></header>');
				head.width = 150;
				head.val = "";
				colH.addItem(head);			
			
			for (var i_header:int = 0; i_header < num_rows; i_header++)
			{
				head = new XML('<header></header>');
				head.width = 150;
				head.val = i_header;
				colH.addItem(head);
				
			}
			colH.enableAutoUpdate();
			dp_headers = colH; */
			
			

			var collection:XMLListCollection =  new XMLListCollection();	
			collection.disableAutoUpdate();	
			
			// Days of week
			var dow:Array = ["Mon" , "Tue" , "Wed" , "Thu" , "Fri" , "Sat" , "Sun"];
			var dow2:Array = ["Monday" , "Tuesday" , "Wednesday" , "Thursday" , "Friday" , "Saturday" , "Sunday"];
			
		
		    // Add the weeks
			var x1:XML = new XML("<top_row></top_row>");			
			for (var i_col:int = 0; i_col < num_cols; i_col++)
			{
				var y:XML = new XML("<col />");
				var week:int = (i_col / 7) + 1;
				var d_int:int = i_col - ( (week - 1) * 7);
				
				
				
				// Set the text			
				var day:String = dow[d_int];
				y.day = day;
				y.val = day;
				
				// Store the day number
				y.day_num = i_col + 1;
				
				// Hover text - use day week and day number
				var hover:String = dow2[d_int] + " Week " + new String(week) + " (Day " + new String(i_col + 1) + ")"; 
				y.hover = hover;
				
				
				// Weekends
				if (day == "Sun" || day == "Sat")
				{
					y.backgroundDisabledColor = "0xCCFFCC";	
					y.backgroundColor = "0xCCFFCC";			 	
				}
				else
				{
					y.backgroundDisabledColor = "0xFFFFFF";	
					y.backgroundColor = "0xFFFFFF";	
				}
					
					
				
				
				x1.appendChild(y);

					
				
			}
			collection.addItem(x1);				    
	   
			// Add the shifts
			for (var i_row:int = 0; i_row < num_rows; i_row++)
			{
				var x:XML = new XML("<row></row>");
				for (i_col = 0; i_col < num_cols; i_col++)
				{
					y = new XML("<col />");
					y.val = i_col;
					x.appendChild(y);
					if (i_col == 5)
					{
						y.color = "red";
						y.backgroundDisabledColor = "blue";
						
					}
						
					
				}
				collection.addItem(x);				
			}
			
			collection.enableAutoUpdate();
			dp = collection;
			
		}			
			
			
		]]>
	</mx:Script>
</mx:Application>
