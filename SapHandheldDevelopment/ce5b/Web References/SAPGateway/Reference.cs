//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.832.
// 
namespace ce5b.SAPGateway {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="POFunctionsSoap", Namespace="http://tempuri.org/")]
    public partial class POFunctions : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public POFunctions() {
            this.Url = "http://10.194.9.21/PMWebServices/POFunctions.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPOData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPOData(string PONumber) {
            object[] results = this.Invoke("GetPOData", new object[] {
                        PONumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPOData(string PONumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPOData", new object[] {
                        PONumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetPOData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostGoodsReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PostGoodsReceipt(string sGRXml, string sPrintXML, string sUser, string sPassword, out string sMessage, out string sPrintMessage) {
            object[] results = this.Invoke("PostGoodsReceipt", new object[] {
                        sGRXml,
                        sPrintXML,
                        sUser,
                        sPassword});
            sMessage = ((string)(results[1]));
            sPrintMessage = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPostGoodsReceipt(string sGRXml, string sPrintXML, string sUser, string sPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PostGoodsReceipt", new object[] {
                        sGRXml,
                        sPrintXML,
                        sUser,
                        sPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndPostGoodsReceipt(System.IAsyncResult asyncResult, out string sMessage, out string sPrintMessage) {
            object[] results = this.EndInvoke(asyncResult);
            sMessage = ((string)(results[1]));
            sPrintMessage = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/POSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string POSearch(string dateFrom, string dateTo, string lifnr, string ebelnFrom, string ebelnTo, string sPlant) {
            object[] results = this.Invoke("POSearch", new object[] {
                        dateFrom,
                        dateTo,
                        lifnr,
                        ebelnFrom,
                        ebelnTo,
                        sPlant});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPOSearch(string dateFrom, string dateTo, string lifnr, string ebelnFrom, string ebelnTo, string sPlant, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("POSearch", new object[] {
                        dateFrom,
                        dateTo,
                        lifnr,
                        ebelnFrom,
                        ebelnTo,
                        sPlant}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPOSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SupplierSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SupplierSearch(string sName, string sPcode) {
            object[] results = this.Invoke("SupplierSearch", new object[] {
                        sName,
                        sPcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSupplierSearch(string sName, string sPcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SupplierSearch", new object[] {
                        sName,
                        sPcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSupplierSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckLogin(string sUname, string sPassword, out string sMessage) {
            object[] results = this.Invoke("CheckLogin", new object[] {
                        sUname,
                        sPassword});
            sMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckLogin(string sUname, string sPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckLogin", new object[] {
                        sUname,
                        sPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckLogin(System.IAsyncResult asyncResult, out string sMessage) {
            object[] results = this.EndInvoke(asyncResult);
            sMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecipientList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RecipientList(string sPlant) {
            object[] results = this.Invoke("RecipientList", new object[] {
                        sPlant});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRecipientList(string sPlant, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RecipientList", new object[] {
                        sPlant}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRecipientList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFuncLocHierarchy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFuncLocHierarchy(string sTopNode, string sAll) {
            object[] results = this.Invoke("GetFuncLocHierarchy", new object[] {
                        sTopNode,
                        sAll});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFuncLocHierarchy(string sTopNode, string sAll, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFuncLocHierarchy", new object[] {
                        sTopNode,
                        sAll}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetFuncLocHierarchy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WOGetDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WOGetDetail(string sUname, string sPassword, string sAufnr, string sBwart, ref string sPlant, ref string sText, ref string sUOMXml) {
            object[] results = this.Invoke("WOGetDetail", new object[] {
                        sUname,
                        sPassword,
                        sAufnr,
                        sBwart,
                        sPlant,
                        sText,
                        sUOMXml});
            sPlant = ((string)(results[1]));
            sText = ((string)(results[2]));
            sUOMXml = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWOGetDetail(string sUname, string sPassword, string sAufnr, string sBwart, string sPlant, string sText, string sUOMXml, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WOGetDetail", new object[] {
                        sUname,
                        sPassword,
                        sAufnr,
                        sBwart,
                        sPlant,
                        sText,
                        sUOMXml}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndWOGetDetail(System.IAsyncResult asyncResult, out string sPlant, out string sText, out string sUOMXml) {
            object[] results = this.EndInvoke(asyncResult);
            sPlant = ((string)(results[1]));
            sText = ((string)(results[2]));
            sUOMXml = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MaterialStorageLocationsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MaterialStorageLocationsList(string sPlant, string[] aMaterials) {
            object[] results = this.Invoke("MaterialStorageLocationsList", new object[] {
                        sPlant,
                        aMaterials});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMaterialStorageLocationsList(string sPlant, string[] aMaterials, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MaterialStorageLocationsList", new object[] {
                        sPlant,
                        aMaterials}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndMaterialStorageLocationsList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActivityTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetActivityTypes(string sOrderType) {
            object[] results = this.Invoke("GetActivityTypes", new object[] {
                        sOrderType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetActivityTypes(string sOrderType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetActivityTypes", new object[] {
                        sOrderType}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetActivityTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEqunrAndFLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEqunrAndFLoc(string sSernr, string sMatnr, ref string sFLoc, ref string sSLoc) {
            object[] results = this.Invoke("GetEqunrAndFLoc", new object[] {
                        sSernr,
                        sMatnr,
                        sFLoc,
                        sSLoc});
            sFLoc = ((string)(results[1]));
            sSLoc = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEqunrAndFLoc(string sSernr, string sMatnr, string sFLoc, string sSLoc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEqunrAndFLoc", new object[] {
                        sSernr,
                        sMatnr,
                        sFLoc,
                        sSLoc}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetEqunrAndFLoc(System.IAsyncResult asyncResult, out string sFLoc, out string sSLoc) {
            object[] results = this.EndInvoke(asyncResult);
            sFLoc = ((string)(results[1]));
            sSLoc = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EqunrSernrValidate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EqunrSernrValidate(ref string sSernr, string sMatnr, string sEqunr) {
            object[] results = this.Invoke("EqunrSernrValidate", new object[] {
                        sSernr,
                        sMatnr,
                        sEqunr});
            sSernr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEqunrSernrValidate(string sSernr, string sMatnr, string sEqunr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EqunrSernrValidate", new object[] {
                        sSernr,
                        sMatnr,
                        sEqunr}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndEqunrSernrValidate(System.IAsyncResult asyncResult, out string sSernr) {
            object[] results = this.EndInvoke(asyncResult);
            sSernr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EqunrSernrValidateWithFloc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EqunrSernrValidateWithFloc(ref string sSernr, string sMatnr, string sEqunr, out string sTplnr) {
            object[] results = this.Invoke("EqunrSernrValidateWithFloc", new object[] {
                        sSernr,
                        sMatnr,
                        sEqunr});
            sSernr = ((string)(results[1]));
            sTplnr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEqunrSernrValidateWithFloc(string sSernr, string sMatnr, string sEqunr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EqunrSernrValidateWithFloc", new object[] {
                        sSernr,
                        sMatnr,
                        sEqunr}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndEqunrSernrValidateWithFloc(System.IAsyncResult asyncResult, out string sSernr, out string sTplnr) {
            object[] results = this.EndInvoke(asyncResult);
            sSernr = ((string)(results[1]));
            sTplnr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateEqunr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateEqunr(string sUname, string sPassword, string sMatnr, string sSernr, string sWerks, string sLgort, string sBwart, ref string sEqunr, ref string sMessage) {
            object[] results = this.Invoke("CreateEqunr", new object[] {
                        sUname,
                        sPassword,
                        sMatnr,
                        sSernr,
                        sWerks,
                        sLgort,
                        sBwart,
                        sEqunr,
                        sMessage});
            sEqunr = ((string)(results[1]));
            sMessage = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateEqunr(string sUname, string sPassword, string sMatnr, string sSernr, string sWerks, string sLgort, string sBwart, string sEqunr, string sMessage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateEqunr", new object[] {
                        sUname,
                        sPassword,
                        sMatnr,
                        sSernr,
                        sWerks,
                        sLgort,
                        sBwart,
                        sEqunr,
                        sMessage}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateEqunr(System.IAsyncResult asyncResult, out string sEqunr, out string sMessage) {
            object[] results = this.EndInvoke(asyncResult);
            sEqunr = ((string)(results[1]));
            sMessage = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GoodsMovement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GoodsMovement(string sUname, string sPassword, string sAufnr, string sDate, string sHText, string sMtype, string sRecip, string sItems, string sNewEquip, ref string sMessXML, out string sSuccessXML) {
            object[] results = this.Invoke("GoodsMovement", new object[] {
                        sUname,
                        sPassword,
                        sAufnr,
                        sDate,
                        sHText,
                        sMtype,
                        sRecip,
                        sItems,
                        sNewEquip,
                        sMessXML});
            sMessXML = ((string)(results[1]));
            sSuccessXML = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGoodsMovement(string sUname, string sPassword, string sAufnr, string sDate, string sHText, string sMtype, string sRecip, string sItems, string sNewEquip, string sMessXML, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GoodsMovement", new object[] {
                        sUname,
                        sPassword,
                        sAufnr,
                        sDate,
                        sHText,
                        sMtype,
                        sRecip,
                        sItems,
                        sNewEquip,
                        sMessXML}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGoodsMovement(System.IAsyncResult asyncResult, out string sMessXML, out string sSuccessXML) {
            object[] results = this.EndInvoke(asyncResult);
            sMessXML = ((string)(results[1]));
            sSuccessXML = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFunctionalLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckFunctionalLocation(string SFloc) {
            object[] results = this.Invoke("CheckFunctionalLocation", new object[] {
                        SFloc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckFunctionalLocation(string SFloc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckFunctionalLocation", new object[] {
                        SFloc}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckFunctionalLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlants", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPlants() {
            object[] results = this.Invoke("GetPlants", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPlants(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPlants", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetPlants(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDefaultFunctionalLocations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDefaultFunctionalLocations() {
            object[] results = this.Invoke("GetDefaultFunctionalLocations", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultFunctionalLocations(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultFunctionalLocations", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDefaultFunctionalLocations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WOCheckLock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WOCheckLock(string sAufnr, ref string sLockedBy) {
            object[] results = this.Invoke("WOCheckLock", new object[] {
                        sAufnr,
                        sLockedBy});
            sLockedBy = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWOCheckLock(string sAufnr, string sLockedBy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WOCheckLock", new object[] {
                        sAufnr,
                        sLockedBy}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndWOCheckLock(System.IAsyncResult asyncResult, out string sLockedBy) {
            object[] results = this.EndInvoke(asyncResult);
            sLockedBy = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckStorageLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckStorageLocation(string sAufnr, string sEqunr, string sSernp, string sBwart, string sRepFlag, ref string sSloc, out string sMessage) {
            object[] results = this.Invoke("CheckStorageLocation", new object[] {
                        sAufnr,
                        sEqunr,
                        sSernp,
                        sBwart,
                        sRepFlag,
                        sSloc});
            sSloc = ((string)(results[1]));
            sMessage = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckStorageLocation(string sAufnr, string sEqunr, string sSernp, string sBwart, string sRepFlag, string sSloc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckStorageLocation", new object[] {
                        sAufnr,
                        sEqunr,
                        sSernp,
                        sBwart,
                        sRepFlag,
                        sSloc}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckStorageLocation(System.IAsyncResult asyncResult, out string sSloc, out string sMessage) {
            object[] results = this.EndInvoke(asyncResult);
            sSloc = ((string)(results[1]));
            sMessage = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StckGetCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StckGetCount(string sIBLNR, string sUname, string sPassword, out string sFYear, out bool bOK, out string sPlantName, out string sPlant) {
            object[] results = this.Invoke("StckGetCount", new object[] {
                        sIBLNR,
                        sUname,
                        sPassword});
            sFYear = ((string)(results[1]));
            bOK = ((bool)(results[2]));
            sPlantName = ((string)(results[3]));
            sPlant = ((string)(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStckGetCount(string sIBLNR, string sUname, string sPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StckGetCount", new object[] {
                        sIBLNR,
                        sUname,
                        sPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndStckGetCount(System.IAsyncResult asyncResult, out string sFYear, out bool bOK, out string sPlantName, out string sPlant) {
            object[] results = this.EndInvoke(asyncResult);
            sFYear = ((string)(results[1]));
            bOK = ((bool)(results[2]));
            sPlantName = ((string)(results[3]));
            sPlant = ((string)(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostInventoryCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostInventoryCount(string sIBLNR, string sItemXML, string sSernrXML, string sUname, string sPword) {
            object[] results = this.Invoke("PostInventoryCount", new object[] {
                        sIBLNR,
                        sItemXML,
                        sSernrXML,
                        sUname,
                        sPword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPostInventoryCount(string sIBLNR, string sItemXML, string sSernrXML, string sUname, string sPword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PostInventoryCount", new object[] {
                        sIBLNR,
                        sItemXML,
                        sSernrXML,
                        sUname,
                        sPword}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPostInventoryCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getinventorylist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Getinventorylist(string mystring) {
            object[] results = this.Invoke("Getinventorylist", new object[] {
                        mystring});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetinventorylist(string mystring, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Getinventorylist", new object[] {
                        mystring}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetinventorylist(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Createinventorylist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Createinventorylist() {
            object[] results = this.Invoke("Createinventorylist", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateinventorylist(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Createinventorylist", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateinventorylist(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlantLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPlantLocation(string Plant) {
            object[] results = this.Invoke("GetPlantLocation", new object[] {
                        Plant});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPlantLocation(string Plant, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPlantLocation", new object[] {
                        Plant}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetPlantLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaterialData(string Material, string Plant, string Storage, out bool ok) {
            object[] results = this.Invoke("GetMaterialData", new object[] {
                        Material,
                        Plant,
                        Storage});
            ok = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMaterialData(string Material, string Plant, string Storage, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMaterialData", new object[] {
                        Material,
                        Plant,
                        Storage}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetMaterialData(System.IAsyncResult asyncResult, out bool ok) {
            object[] results = this.EndInvoke(asyncResult);
            ok = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BlindStockCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BlindStockCount(string sItemXML, string plant, string sloc, string sUname, string sPword, ref string Siblnr) {
            object[] results = this.Invoke("BlindStockCount", new object[] {
                        sItemXML,
                        plant,
                        sloc,
                        sUname,
                        sPword,
                        Siblnr});
            Siblnr = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBlindStockCount(string sItemXML, string plant, string sloc, string sUname, string sPword, string Siblnr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BlindStockCount", new object[] {
                        sItemXML,
                        plant,
                        sloc,
                        sUname,
                        sPword,
                        Siblnr}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndBlindStockCount(System.IAsyncResult asyncResult, out string Siblnr) {
            object[] results = this.EndInvoke(asyncResult);
            Siblnr = ((string)(results[1]));
            return ((string)(results[0]));
        }
    }
}
